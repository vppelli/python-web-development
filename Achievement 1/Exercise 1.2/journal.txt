Exercise 1.2: Data Types in Python 
Learning Goals


- Explain variables and data types in Python
- Summarize the use of objects in Python
- Create a data structure for your Recipe app




Reflection Questions

1. Imagine you’re having a conversation with a future colleague about whether to use the iPython Shell instead of Python’s default shell. What reasons would you give to explain the benefits of using the iPython Shell over the default one?
- iPython Shell is great and will benefit us. Python's default shell has problems. When it comes to readability, it becomes non-user friendly. It's easier to get lost when lots of code piles up. iPython solves this problem by adding contrast and spacing lines of code. Making code text readable, and as a bonus, it automatically indents text for nesting statements.

2. Python has a host of different data types that allow you to store and organize information. List 4 examples of data types that Python recognizes, briefly define them, and indicate whether they are scalar or non-scalar.
------------------------------------------------------------
- int    | this is a whole number            | Scalar
- float  | this is a decimal number          | Scalar
- tuples | this is a linear array of values  | Non-Scalar
- bool   | this is a true or false statement | Scalar
------------------------------------------------------------

3. A frequent question at job interviews for Python developers is: what is the difference between lists and tuples in Python? Write down how you would respond.
- The difference between lists and tuples, is tuples you cant edit or delete internal elements. With lists you can modifie or delte any of the internal elements. 

4. In the task for this Exercise, you decided what you thought was the most suitable data structure for storing all the information for a recipe. Now, imagine you’re creating a language-learning app that helps users memorize vocabulary through flashcards. Users can input vocabulary words, definitions, and their category (noun, verb, etc.) into the flashcards. They can then quiz themselves by flipping through the flashcards. Think about the necessary data types and what would be the most suitable data structure for this language-learning app. Between tuples, lists, and dictionaries, which would you choose? Think about their respective advantages and limitations, and where flexibility might be useful if you were to continue developing the language-learning app beyond vocabulary memorization. 
- I would use dictionaries to store values and objects within itsself indexed by identifiers or keys. It will allow me to store vocabulary words, definitions, and their category. Within the category, I can store nouns, verbs, etc. This new varible can append all card into one big dictionarie of cards. With the ability to index through them in any order they want. An advantage of using dictionaries is that I can have many flashcard types and not just vocabulary cards, letting me expand for the future. The limitations would be not being able to sort by alphabetic order.